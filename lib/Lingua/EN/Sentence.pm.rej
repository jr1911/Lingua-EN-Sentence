--- /dev/null
+++ /dev/null
@@ -219,7 +219,8 @@ my @MISC = qw(no esp);
 my @LATIN = qw(vs etc al ibid sic);
 
 our @ABBREVIATIONS = (@PEOPLE, @TITLE_SUFFIXES, @ARMY, @INSTITUTES, @COMPANIES, @PLACES, @MONTHS, @MISC, @LATIN );
-
+my $abbreviation_regex;
+_set_abbreviations_regex();
 
 #==============================================================================
 #
@@ -250,6 +251,7 @@ sub get_sentences {
 #------------------------------------------------------------------------------
 sub add_acronyms {
     push @ABBREVIATIONS, @_;
+    _set_abbreviations_regex();
 }
 
 #------------------------------------------------------------------------------
@@ -264,6 +266,7 @@ sub get_acronyms {
 #------------------------------------------------------------------------------
 sub set_acronyms {
     @ABBREVIATIONS=@_;
+    _set_abbreviations_regex();
 }
 
 #------------------------------------------------------------------------------
@@ -282,7 +285,9 @@ sub set_EOS {
         cluck "Won't set \$EOS to undefined value!\n";
         return $EOS;
     }
-	return $EOS = $new_EOS;
+    $EOS = $new_EOS;
+    _set_abbreviations_regex();
+    return $EOS;
 }
 
 #------------------------------------------------------------------------------
@@ -358,7 +370,7 @@ sub remove_false_end_of_sentence {
     # fix "." "?" "!"
     $marked_segment=~s/(['"]$P['"]\s+)$EOS/$1/sg;
     ## fix where abbreviations exist
-	foreach (@ABBREVIATIONS) { $marked_segment=~s/(\b$_$PAP\s)$EOS/$1/isg; }
+    $marked_segment=~s/$abbreviation_regex/$1/g;
 
     # don't break after quote unless its a capital letter.
     $marked_segment=~s/(["']\s*)$EOS(\s*[[:lower:]])/$1$2/sg;
